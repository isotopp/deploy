#! /usr/bin/env python3

import json
import os
import socket
import subprocess
import sys
import time

START_CMD = "/usr/bin/systemctl start httpd.service"
STOP_CMD = "/usr/bin/systemctl stop httpd.service"
STATUS_CMD = "/usr/bin/systemctl status httpd.service"


def run(cmd: str, show=False):
    """ Run a command, successfully.
    """
    result = subprocess.run(cmd, shell=True, capture_output=True, timeout=30)

    code = result.returncode
    stdout = result.stdout.decode('utf-8')
    stderr = result.stderr.decode('utf-8')

    if code == 0:
        print(".", end="", flush=True)
        if show:
            print()
            print(f"***STDOUT: {stdout}")
        return

    print(f"*** CMD: {cmd}")
    print(f"*** ERROR: exit code={result.returncode}")
    if stdout:
        print(f"*** STDOUT: {stdout}")
    if stderr:
        print(f"*** STDERR: {stderr}")

    raise (OSError(f"Error {code} while running {cmd}"))


def restart_apache():
    """ Restart the apache daemon, twice (for mod_md) """
    for _ in [1, 2]:
        run(STOP_CMD)
        time.sleep(0.5)
        run(START_CMD)
        time.sleep(0.5)
    run(STATUS_CMD, show=True)


def collect_hostnames(directory):
    hostnames = []
    for filename in os.listdir(directory):
        with open(os.path.join(directory, filename), 'r') as file:
            try:
                data = json.load(file)
                if 'hostname' in data:
                    hostnames.append(data['hostname'])
                else:
                    print(f"Warning: {filename} contains no hostname.", file=sys.stderr)
            except json.JSONDecodeError:
                print(f"Warning: Failed to parse {filename} as JSON.", file=sys.stderr)
    return hostnames


def main():
    directory = '/etc/projects/'
    hostnames = [socket.getfqdn()] + collect_hostnames(directory)

    with open('/etc/httpd/conf.d/ssldomain.conf', 'w') as file:
        file.write(f"Servername {socket.getfqdn()}\n")
        file.write("MDCertificateAgreement accepted\n")
        file.write("MDPrivateKeys RSA 4096\n")
        file.write("MDomain " + " ".join(hostnames) + "\n")

    restart_apache()


if __name__ == "__main__":
    main()
